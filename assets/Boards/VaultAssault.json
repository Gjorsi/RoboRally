{
  "name": "Vault Assault",
  "length": "short",
  "players": "2-4",
  "width": "12",
  "height": "12",
  "grid": "t1 f f_wN f_bSN0 f_wN f f_bSN0 f_wN f f_wN f_bSN1 f f_cC bWE0 bWE0 bWN0 f f_pEO_wW bSN0 f f f bSN1 f bNS1 f f h f f_wS pNO_wS f h f bSN1 f_wE bNWE1 bWS1 f f f f f_g1 f f f bSN1 f f_lTE1_wW bNS1 f f f_wW_wN f f f_wN_wE f f f f_wE_lTW1 f bNS1 f_wE f f t2 t2 f f_g3 f_pEO_wW f f f bNS1 f_pWO_wE f f t2 t2 f f f_pEO_wW bSE1 bWE1 f_wW_lTE1 bNS1 f f f_wW_wS f f f_wS_wE f f bSN1 f_wE_lTW1 bEW1 cC bWE1_wW f_g2 bWE1 f bEW1 f bEW1 f_wE bNS0 f f_wW bSN0 f bWE1 f bWE1 f bEW1 f bEW1 bNS0 f_wE f bEN0 bEW0 bEW0 bEW0 bEW0 bEW0 bEW0 bEW0 bEW0 bNW0 f t1 f f_wS f f_wS f f f_wS f f_wS f f"
  /*
 f_t1 f f_wN f_bSN1 f_wN f f_bSN1 f_wN f f_wN f_bSN0 f f bSE0 bWE0 bWE0 bWS0 f f bSE0 bWE0 bWE0 bWS0 f f_wW bSN0 cC f_wS bNS0 cA f bSN0 cC f bNS0 f_wE f bSN0 t1 cC bNS0 f_wW f_lTW1 bSN0 t2 cC bNS0 f f_wW bEN0 bEW0 bEW0 bNW0 f_g1 cA bEN0 bEW0 bEW0 bNW0 f_wE f f f f cA f_pNP_wS f f f_lTS1 cA f f f f_g3 cA f_lTN1 f f f cA f f f f f_wW bSE0 bWE0 bWE0 bWS0 cA f bSE0 bWE0 bWE0 bWS0 f_wE f bSN0 cC t2 bNS0 f_lTE1 f_wE bSN0 cC t1 bNS0 f f_wW bSN0 f cC bNS0 f cA bSN0 f_wN cC bNS0 f_wE f bEN0 bEW0 bEW0 bNW0 f f bEN0 bEW0 bEW0 bNW0 f f f f_wS f f_wS f f f_wS f f_wS f_g2 f",

   "Code": {
     "b": "conveyor belt <- (snd_direction_from::[N,E,S,W], direction_to::[N,E,S,W], type::[0,1])",
     "c": "cogwheel <- (direction::[C, A], type::[1,2])",
     "f": "floor",
     "g": "flag <- (number::[1,2,3,4] )",
     "h": "hole",
     "l": "laser <- (isStartPosition::[T,F], direction::[N,E,S,W], numberOfLasers::[1,2])",
     "r": "robot",
     "s": "start cell for a robot  <- (number::[1 ... 8])",
     "t": "wrench <- (number::[1,2])",
     "w": "wall <- (direction_to::[N,E,S,W])",
     "p": "pusher <- (direction::[N,W,S,E], phase::[P,O])"
   },
   "posCode": {
     "N": "north",
     "E": "east",
     "W": "west",
     "S": "south",
     "C": "with clock direction",
     "A": "against clock direction",
     "P": "pair phase:  2 or 4",
     "O": "odd phase: 1, 3 or 5",
     "T": "true",
     "F": "false"
   },
   "split": {
     "_": "between codes in the same cell",
     " ": "between cells"
   }*/

}